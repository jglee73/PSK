
  //---------------------------------------------------
  //  S7Fy

  //------------------------------
  // 	Process Program Load Inquire (PPI)   		H -> E

  #MESSAGE    S7F1  
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      0
  
  1.<L,  2
#UNFIXED  
         1.<A[1]    $PPID
         2.<U4[1]   $LENGTH
                      
  #END
  //------------------------------
  //------------------------------
  //	Process Program Load Grant (PPG)   		H <- E

  #MESSAGE    S7F2
  #DIRECTION  SEND
  
  1.<B[1]   $PPGNT
       
  #END

/*
PPGNT
	0  = OK
	1  = Already have
	2  = No space
	3  = Invlid PPID
	4  = Busy, try later
	5  = Will not accept
	>5 = Other error
*/
  //------------------------------


  //------------------------------
  //	Process Program Send (PPS)    			H -> E

  #MESSAGE    S7F3  
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      0

  1.<L,  6
#UNFIXED  
	       1.<A[16]   $PPID      					                         // ROUTE RECIPE
	       2.<L,  4   $HEAD_USE               	                   // HEAD USE LIST
	              1.<BOOL[1]   $HEAD1_USE                             // HEAD USE1  (True = YES)
	              2.<BOOL[1]   $HEAD2_USE                             // HEAD USE2  (True = YES)
	              3.<BOOL[1]   $HEAD3_USE                             // HEAD USE3  (True = YES)
	              4.<BOOL[1]   $HEAD4_USE                             // HEAD USE4  (True = YES)	              
	       3.<BOOL[1]   $POLISHER_PARALLEL_MODE	                   // POLISHER PARALLEL MODE (True = YES)
#UNFORMATTED
	       4.<L,  1   $POLISHER_STAGEx_PROCESS	                   // POLISHER STAGEx PROCESS
	              1.<L,  5						
	                     1.<U1[1]   $STAGE_ID			                    // STAGE IDx : 1 ~ 3  (P1 ~ P3)
#UNFIXED	               
	                     2.<A[25]   $HEAD_RECIPE	                    // HEAD RECIPE NAME
#UNFORMATTED
	                     3.<L,  1   $HEAD_STEP_LIMIT			            // HEAD STEP LIMIT
#UNFORMATTED
	                            1.<L,  1  $STEP_ITEM_LIMIT		           // STEP ITEM LIMIT 
#UNFIXED
	                                   1.<A[1]   $STEP_PPARM	              // PROCESS PARAMETER
#UNFIXED	               
                       4.<A[25]   $CONDITIONER_RECIPE               // CONDITIONER RECIPE NAME
#UNFORMATTED
	                     5.<L,  1   $CONDITIONER_STEP_LIMIT		        // CONDITIONER STEP LIMIT
#UNFORMATTED
	                            1.<L,  1  $STEP_ITEM_LIMIT		           // STEP ITEM LIMIT
#UNFIXED
	                                    1.<A[1]   $STEP_PPARM		            // PROCESS PARAMETER
#UNFORMATTED
	       5.<L,  1   $CLEANER_STAGEx_PROCESS	                     // CLEANER STAGEx PROCESS
	              1.<L,  3						
	                     1.<U1[1]   $STAGE_ID			                    // STAGE IDx : 1 ~ 4  (S1 ~ S4)
#UNFIXED	               
	                     2.<A[25]   $CLEANER_RECIPE	                  // CLEANER RECIPE NAME
#UNFORMATTED
	                     3.<L,  1   $CLEANER_STEP_LIMIT			          // CLEANER STEP LIMIT
#UNFORMATTED
	                            1.<L,  1  $STEP_ITEM_LIMIT		           // STEP ITEM LIMIT 
#UNFIXED
	                                   1.<A[1]   $STEP_PPARM	              // PROCESS PARAMETER
#UNFORMATTED
	       6.<L,  1   $MEASUREMENT_PROCESS	                       // MEASUREMENT PROCESS
	              1.<L,  3
	                     1.<U1[1]   $MEASUREMENT_TYPE                 // TYPE : (0 = Previous, 1 = Post)
#UNFIXED	               
	                     2.<A[25]   $MEASUREMENT_RECIPE	              // MEASUREMENT RECIPE NAME
#UNFORMATTED
	                     3.<L,  1   $MEASUREMENT_STEP_LIMIT			      // MEASUREMENT STEP LIMIT
#UNFORMATTED
	                            1.<L,  1  $STEP_ITEM_LIMIT		           // STEP ITEM LIMIT 
#UNFIXED	               
         	                           1.<A[1]   $STEP_PPARM                // PROCESS PARAMETER

  #END
  //------------------------------
  //------------------------------
  //	Process Program Acknowledge (PPA)   		H <- E
  
  #MESSAGE    S7F4
  #DIRECTION  SEND
  
  1.<B[1]  $ACKC7
       
  #END

/*
ACKC7
	0  = Accepted
	1  = Permission not granted
	2  = Length error
	3  = Matrix overflow
	4  = PPID not found
	5  = Mode unsupported
	6  = Command will be performed with completion signaled later
	>6 = Other error	
*/
  //------------------------------


  //------------------------------
  //	Process Program Request (PPR)   		H -> E

  #MESSAGE    S7F5  
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      0

#UNFIXED  
  1.<A[16]   $PPID
                      
  #END
  //------------------------------
  //------------------------------
  //	Process Program Data (PPD)    			H <- E

  #MESSAGE    S7F6
  #DIRECTION  SEND
  
#UNFORMATTED
  1.<L,  6   $PPID_INFO
#UNFIXED  
	       1.<A[16]   $PPID      					                         // ROUTE RECIPE
	       2.<L,  4   $HEAD_USE               	                   // HEAD USE LIST
	              1.<BOOL[1]   $HEAD1_USE                             // HEAD USE1  (True = YES)
	              2.<BOOL[1]   $HEAD2_USE                             // HEAD USE2  (True = YES)
	              3.<BOOL[1]   $HEAD3_USE                             // HEAD USE3  (True = YES)
	              4.<BOOL[1]   $HEAD4_USE                             // HEAD USE4  (True = YES)	              
	       3.<BOOL[1]   $POLISHER_PARALLEL_MODE	                   // POLISHER PARALLEL MODE (True = YES)
#UNFORMATTED
	       4.<L,  1   $POLISHER_STAGEx_PROCESS	                   // POLISHER STAGEx PROCESS
	              1.<L,  5						
	                     1.<U1[1]   $STAGE_ID			                    // STAGE IDx : 1 ~ 3  (P1 ~ P3)
#UNFIXED	               
	                     2.<A[25]   $HEAD_RECIPE	                    // HEAD RECIPE NAME
#UNFORMATTED
	                     3.<L,  1   $HEAD_STEP_LIMIT			            // HEAD STEP LIMIT
#UNFORMATTED
	                            1.<L,  1  $STEP_ITEM_LIMIT		           // STEP ITEM LIMIT 
#UNFIXED
	                                   1.<A[1]   $STEP_PPARM	              // PROCESS PARAMETER
#UNFIXED	               
                       4.<A[25]   $CONDITIONER_RECIPE               // CONDITIONER RECIPE NAME
#UNFORMATTED
	                     5.<L,  1   $CONDITIONER_STEP_LIMIT		        // CONDITIONER STEP LIMIT
#UNFORMATTED
	                            1.<L,  1  $STEP_ITEM_LIMIT		           // STEP ITEM LIMIT
#UNFIXED
	                                    1.<A[1]   $STEP_PPARM		            // PROCESS PARAMETER
#UNFORMATTED
	       5.<L,  1   $CLEANER_STAGEx_PROCESS	                     // CLEANER STAGEx PROCESS
	              1.<L,  3						
	                     1.<U1[1]   $STAGE_ID			                    // STAGE IDx : 1 ~ 4  (S1 ~ S4)
#UNFIXED	               
	                     2.<A[25]   $CLEANER_RECIPE	                  // CLEANER RECIPE NAME
#UNFORMATTED
	                     3.<L,  1   $CLEANER_STEP_LIMIT			          // CLEANER STEP LIMIT
#UNFORMATTED
	                            1.<L,  1  $STEP_ITEM_LIMIT		           // STEP ITEM LIMIT 
#UNFIXED
	                                   1.<A[1]   $STEP_PPARM	              // PROCESS PARAMETER
#UNFORMATTED
	       6.<L,  1   $MEASUREMENT_PROCESS	                       // MEASUREMENT PROCESS
	              1.<L,  3
	                     1.<U1[1]   $MEASUREMENT_TYPE                 // TYPE : (0 = Previous, 1 = Post)
#UNFIXED	               
	                     2.<A[25]   $MEASUREMENT_RECIPE	              // MEASUREMENT RECIPE NAME
#UNFORMATTED
	                     3.<L,  1   $MEASUREMENT_STEP_LIMIT			      // MEASUREMENT STEP LIMIT
#UNFORMATTED
	                            1.<L,  1  $STEP_ITEM_LIMIT		           // STEP ITEM LIMIT 
#UNFIXED	               
         	                           1.<A[1]   $STEP_PPARM                // PROCESS PARAMETER
       
  #END
  
/*
PPID_INFO
	A zero-length list means request denied.
*/
  //------------------------------


  //------------------------------
  // 	Delete Process Program Send (DPS)   		H -> E

  #MESSAGE    S7F17
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      0

#UNFORMATTED
  1.<L,  1   $LIST_LIMIT      // n
#UNFIXED  
   	     1.<A[1]   $PPID
  
  #END
  
/*
LIST_LIMIT
	If n = 0, then delete all.
*/  
  //------------------------------
  //------------------------------
  // 	Delete Process Program Acknowledge (DPA)  	H <- E	

  #MESSAGE    S7F18
  #DIRECTION  SEND
  
  1.<B[1]   $ACKC7
  
  #END
  
/*
ACKC7
	0 = Accepted
	1 = Permission not granted
	2 = Length error
	3 = Matrix overflow
	4 = PPID not found
	5 = Mode unsupported
	6 = Command will be performed with completion signaled later
	>6 = Other error
	7 ~ 63 Reserved
*/  
  //------------------------------


  //------------------------------
  // 	Current EPPD Request (RER)    			H -> E

  #MESSAGE    S7F19   
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      0
  
  #END
  
/*
  Route Recipe List º¸°í
*/
  //------------------------------
  //------------------------------
  // 	Current EPPD Request (RER)    			H -> E

  #MESSAGE    S7F19   
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      1
  
  1.<U1[1]   $PPID 
  
  #END

/*
PPID

  1  = Cassette Recipe
  2  = Route Recipe

  11 = Head recipe of polisher stage1
  12 = Conditioner recipe of polisher stage1 
  21 = Head recipe of polisher stage2
  22 = Conditioner recipe of polisher stage2
  31 = Head recipe of polisher stage3
  32 = Conditioner recipe of polisher stage3
  
  41 = Cleaner recipe of cleaner stage1
  42 = Cleaner recipe of cleaner stage2
  43 = Cleaner recipe of cleaner stage3
  44 = Cleaner recipe of cleaner stage4
  
  51 = Metrology Recipe
*/
  //------------------------------
  
  //------------------------------
  //	Current EPPD Data (RED)    			H <- E	

  #MESSAGE    S7F20
  #DIRECTION  SEND

#UNFORMATTED  
  	1.<L,  1    $LIST_LIMIT
#UNFIXED   	
           1.<A[1]   $PPID
       
  #END
  //------------------------------


  //------------------------------
  // 	Formatted Process Program Send (FPS) 		H -> E

  #MESSAGE    S7F23 
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE       0
  
  1.<L,  4
#UNFIXED  
  	     1.<A[1]   $PPID      			      				// CASSETTE or ROUTE or PMC RECIPE
#UNFIXED  
  	     2.<A[1]   $MDLN	  					            // MDLN
#UNFIXED  
  	     3.<A[1]   $SOFTREV						            // SOFTREV  	     
#UNFORMATTED
	       4.<L,  1   $PROC_CMMD_LIST
	              1.<L,  2
	                     1.<U2[1]   $CCODE
	                     2.<L,  1   
#UNFIXED  
	                            1.<A[1]   $PPARM  	     

  #END
  //------------------------------
  //------------------------------
  //	Formatted Process Program Ack (FPA) 		H <- E	

  #MESSAGE    S7F24
  #DIRECTION  SEND
  
  1.<B[1]   $ACKC7
       
  #END
  
/*
ACKC7
	0  = Accepted
	1  = Permission not granted
	2  = Length error
	3  = Matrix overflow
	4  = PPID not found
	5  = Mode unsupported
	6  = Command will be performed with completion signaled later
  > 6 = Other error	  
*/
  //------------------------------


  //------------------------------
  //	Formatted Process Program Request (FPR)   	H -> E

  #MESSAGE    S7F25
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      0
  
#UNFIXED
  1.<A[1]   $PPID
                      
  #END
  //------------------------------
  //------------------------------
  //	Formatted Process Program Reply (FPD)  		H <- E

  #MESSAGE    S7F26
  #DIRECTION  SEND
  
  1.<L,  4   
#UNFIXED  
  	     1.<A[1]   $PPID      			      				// CASSETTE or ROUTE or PMC RECIPE
#UNFIXED  
  	     2.<A[1]   MDLN						              	// MDLN
#UNFIXED  
  	     3.<A[1]   SOFTREV						          	// SOFTREV
#UNFORMATTED
	       4.<L,  1   $PROC_CMMD_LIST
	              1.<L,  2
	                     1.<U2[1]   $CCODE
	                     2.<L,  1   
#UNFIXED  
	                            1.<A[1]   $PPARM
       
  #END

/*
PPID_INFO
	A zero length list indicates the request was denied.
*/  
  //------------------------------


  //------------------------------
  //	Process Program Available Request (PAR)   	H -> E

  #MESSAGE    S7F33
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      0
  
#UNFIXED
  1.<A[1]   $PPID
                      
  #END
  //------------------------------
  //------------------------------
  //	Process Program Availability Data (PAD)  		H <- E

  #MESSAGE    S7F34
  #DIRECTION  SEND
  
  1.<L,  3  
#UNFIXED  
  	     1.<A[1]   $PPID      					// A  :  ROUTE RECIPE
  	     2.<U4[1]  $UNFLEN				      // U4 :  UNFLEN
  	     3.<U4[1]  $FRMLEN					    // U4 :  FRMLEN
       
  #END
  //------------------------------


  //------------------------------
  // 	Full Formatted Process Program Send (FPS) 	H -> E

  #MESSAGE    S7F83  
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      0
  
  1.<L,  4
#UNFIXED
  	 1.<A[1]   $PPID						                                      // ROUTE RECIPE
#UNFIXED
  	 2.<A[1]   MDLN						                                        // MDLN
#UNFIXED
  	 3.<A[1]   SOFTREV						                                    // SOFTREV
     4.<L,  5                                                  
            1.<L,  4   $HEAD_USE               	                         // HEAD USE LIST
                   1.<BOOL[1]   $HEAD1_USE                                  // HEAD USE1  (True = YES)
                   2.<BOOL[1]   $HEAD2_USE                                  // HEAD USE2  (True = YES)
                   3.<BOOL[1]   $HEAD3_USE                                  // HEAD USE3  (True = YES)
                   4.<BOOL[1]   $HEAD4_USE                                  // HEAD USE4  (True = YES)	              
            2.<BOOL[1]   $POLISHER_PARALLEL_MODE	                       // POLISHER PARALLEL MODE (True = YES)
#UNFORMATTED
	          3.<L,  1   $POLISHER_STAGEx_PROCESS	                         // POLISHER STAGEx PROCESS
	                 1.<L,  5						
	                        1.<U1[1]   $STAGE_ID			                        // STAGE IDx : 1 ~ 3  (P1 ~ P3)
#UNFIXED	               
	                        2.<A[25]   $HEAD_RECIPE	                          // HEAD RECIPE NAME
#UNFORMATTED
	                        3.<L,  1   $HEAD_STEP_LIMIT			                  // HEAD STEP LIMIT
#UNFORMATTED
	                               1.<L,  1  $STEP_ITEM_LIMIT		                 // STEP ITEM LIMIT 
	              	                      1.<L,  2
#UNFIXED	               
	              	              	             1.<A[1]   $STEP_PPARM_NAME	        // A  :  STEP PARAMETER NAME
#UNFIXED	               
	              	            	               2.<A[1]   $STEP_PPARM_DATA	        // A  :  STEP PARAMETER DATA
#UNFIXED	               
                          4.<A[25]   $CONDITIONER_RECIPE                    // CONDITIONER RECIPE NAME
#UNFORMATTED
	                        5.<L,  1   $CONDITIONER_STEP_LIMIT		            // CONDITIONER STEP LIMIT
#UNFORMATTED
	                               1.<L,  1  $STEP_ITEM_LIMIT		                 // STEP ITEM LIMIT
	              	                      1.<L,  2
#UNFIXED	               
	              	              	             1.<A[1]   $STEP_PPARM_NAME	        // A  :  STEP PARAMETER NAME
#UNFIXED	               
	              	            	               2.<A[1]   $STEP_PPARM_DATA	        // A  :  STEP PARAMETER DATA
#UNFORMATTED
	          4.<L,  1   $CLEANER_STAGEx_PROCESS	                         // CLEANER STAGEx PROCESS
	                 1.<L,  3						
	                        1.<U1[1]   $STAGE_ID			                        // STAGE IDx : 1 ~ 4  (S1 ~ S4)
#UNFIXED	               
	                        2.<A[25]   $CLEANER_RECIPE	                      // CLEANER RECIPE NAME
#UNFORMATTED
	                        3.<L,  1   $CLEANER_STEP_LIMIT			              // CLEANER STEP LIMIT
#UNFORMATTED
	                               1.<L,  1  $STEP_ITEM_LIMIT		                 // STEP ITEM LIMIT 
	              	                      1.<L,  2
#UNFIXED	               
	              	              	             1.<A[1]   $STEP_PPARM_NAME	        // A  :  STEP PARAMETER NAME
#UNFIXED	               
	              	            	               2.<A[1]   $STEP_PPARM_DATA	        // A  :  STEP PARAMETER DATA
#UNFORMATTED
            5.<L,  1   $MEASUREMENT_PROCESS	                             // MEASUREMENT PROCESS
	                 1.<L,  3						
	                        1.<U1[1]   $MEASUREMENT_TYPE                      // TYPE : (0 = Previous, 1 = Post)
#UNFIXED	               
	                        2.<A[25]   $MEASUREMENT_RECIPE	                  // MEASUREMENT RECIPE NAME
#UNFORMATTED
	                        3.<L,  1   $MEASUREMENT_STEP_LIMIT			          // MEASUREMENT STEP LIMIT
#UNFORMATTED
	                               1.<L,  1  $STEP_ITEM_LIMIT		                 // STEP ITEM LIMIT 
	              	                      1.<L,  2
#UNFIXED	               
	              	              	             1.<A[1]   $STEP_PPARM_NAME	        // A  :  STEP PARAMETER NAME
#UNFIXED	               
	              	            	               2.<A[1]   $STEP_PPARM_DATA	        // A  :  STEP PARAMETER DATA
                      
  #END
  //------------------------------
  //------------------------------
  //	Full Formatted Process Program Ack (FPA) 	H <- E	

  #MESSAGE    S7F84
  #DIRECTION  SEND
  
  1.<L,  2
  	     1.<B[1]   $ACKC7				
         2.<L,  3   $PROCESS_ERROR_LIST			
#UNFORMATTED
	              1.<L,  1   $POLISHER_STAGEx_PROCESS	                                    // POLISHER STAGEx PROCESS
                       1.<L,  6                                                         
                              1.<U1[1]   $STAGE_ACK		                                     // STAGE ACK
#UNFIXED                
                              2.<A[1]    $STAGE_ID		                                     // STAGE ID
#UNFIXED                
                              3.<A[1]    $HEAD_RECIPE		                                   // HEAD RECIPE NAME
#UNFORMATTED
                              4.<L,  1   $HEAD_STEP_ERROR_LIST                             // HEAD STEP ERROR LIST
                                     1.<L,  2
                                            1.<U1[1]   $STEP_NO			                          // STEP NO
#UNFORMATTED
                                            2.<L,  1  $ITEM_ERROR_LIST                        // ITEM ERROR LIST
                                     	             1.<L,  2
#UNFIXED                
                                     	    	              1.<A[1]    $STEP_ITEM_NAME	           // STEP ITEM NAME
                                     	    	              2.<U1[1]   $STEP_ERROR_CODE	           // STEP ERROR CODE
#UNFIXED                
                              5.<A[1]    $CONDITIONER_RECIPE		                           // CONDITIONER RECIPE NAME
#UNFORMATTED
                              6.<L,  1   $CONDITIONER_STEP_ERROR_LIST                      // CONDITIONER STEP ERROR LIST
                                     1.<L,  2
                                            1.<U1[1]   $STEP_NO			                          // STEP NO
#UNFORMATTED
                                            2.<L,  1  $ITEM_ERROR_LIST                        // ITEM ERROR LIST
                                     	             1.<L,  2
#UNFIXED                
                                     	    	              1.<A[1]    $STEP_ITEM_NAME	           // STEP ITEM NAME      
                                     	    	              2.<U1[1]   $STEP_ERROR_CODE	           // STEP ERROR CODE
#UNFORMATTED
	              2.<L,  1   $CLEANER_STAGEx_PROCESS	                                    // CLEANER STAGEx PROCESS
                       1.<L,  4                                                         
                              1.<U1[1]   $STAGE_ACK		                                     // STAGE_ACK
#UNFIXED                
                              2.<A[1]    $STAGE_ID		                                     // STAGE_ID
#UNFIXED                
                              3.<A[1]    $CLEANER_RECIPE		                               // CLEANER_RECIPE
#UNFORMATTED
                              4.<L,  1   $CLEANER_STEP_ERROR_LIST                          // CLEANTER STEP ERROR LIST
                                     1.<L,  2
                                            1.<U1[1]   $STEP_NO			                          // STEP NO
#UNFORMATTED
                                            2.<L,  1  $ITEM_ERROR_LIST                        // ITEM ERROR LIST
                                     	             1.<L,  2
#UNFIXED                
                                     	    	              1.<A[1]    $STEP_ITEM_NAME	           // STEP ITEM NAME
                                     	    	              2.<U1[1]   $STEP_ERROR_CODE	           // STEP ERROR CODE
#UNFORMATTED
                3.<L,  1   $MEASUREMENT_PROCESS	                                        // MEASUREMENT PROCESS
	                     1.<L,  3						
	                            1.<U1[1]   $MEASUREMENT_TYPE                                 // TYPE : (0 = Previous, 1 = Post)
#UNFIXED	               
	                            2.<A[25]   $MEASUREMENT_RECIPE	                             // MEASUREMENT RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $MEASUREMENT_STEP_LIMIT			                     // MEASUREMENT STEP LIMIT
                                     1.<L,  2
                                            1.<U1[1]   $STEP_NO			                          // STEP NO
#UNFORMATTED
	                                          2.<L,  1  $STEP_ITEM_LIMIT		                       // STEP ITEM LIMIT 
	              	                                 1.<L,  2
#UNFIXED	               
	              	              	                        1.<A[1]   $STEP_PPARM_NAME	              // STEP PARAMETER NAME
#UNFIXED	               
	              	            	                          2.<A[1]   $STEP_PPARM_DATA	              // STEP PARAMETER DATA

  #END

/*
<ACKC7>  
	0 = Accepted
	1 = Permission not granted
		
<STAGEx_ACK>	
	0 = Accepted
	1 = Permission not granted
	6 = Invalid recipe
	
<ERROR_CODE>
	1 = Parameter not exit
	2 = Range Error
	3 = Invalid Value
*/
  //------------------------------


  //------------------------------
  //	Full Formatted Process Program Data Request    	H -> E

  #MESSAGE    S7F85 
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE       0

#UNFIXED  
  1.<A[1]   $PPID
                      
  #END
  //------------------------------
  //------------------------------
  //	Full Formatted Process Program Data Reply  	H <- E

  #MESSAGE    S7F86
  #DIRECTION  SEND
  
#UNFORMATTED  	 
  1.<L,  4   $PPID_INFO
#UNFIXED  	 
  	     1.<A[1]   $PPID      							// ROUTE RECIPE
#UNFIXED  	 
  	     2.<A[1]   MDLN		
#UNFIXED  	 
  	     3.<A[1]   SOFTREV	
         4.<L,  5                                                  
                1.<L,  4   $HEAD_USE               	                         // HEAD USE LIST
                       1.<BOOL[1]   $HEAD1_USE                                  // HEAD USE1  (True = YES)
                       2.<BOOL[1]   $HEAD2_USE                                  // HEAD USE2  (True = YES)
                       3.<BOOL[1]   $HEAD3_USE                                  // HEAD USE3  (True = YES)
                       4.<BOOL[1]   $HEAD4_USE                                  // HEAD USE4  (True = YES)	              
                2.<BOOL[1]   $POLISHER_PARALLEL_MODE	                       // POLISHER PARALLEL MODE (True = YES)
#UNFORMATTED
	              3.<L,  1   $POLISHER_STAGEx_PROCESS	                         // POLISHER STAGEx PROCESS
	                     1.<L,  5						
	                            1.<U1[1]   $STAGE_ID			                        // STAGE IDx : 1 ~ 3  (P1 ~ P3)
#UNFIXED	               
	                            2.<A[25]   $HEAD_RECIPE	                          // HEAD RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $STEP_LIMIT			
	              	                   1.<L,  2
	              	      	                  1.<U1[1]   $STEP_NO
#UNFORMATTED  	 
	              	      	                  2.<L,  1  $ITEM_LIMIT		
	              	      	     	                   1.<L,  4
#UNFIXED  	 
	              	      	     	     	                    1.<A[1]   $STEP_PPARM_NAME
#UNFIXED  	 
	              	      	     	     	                    2.<A[1]   $UNIT		
#UNFIXED  	 
	              	      	     	     	                    3.<A[1]   $RANGE		
	              	      	     	     	                    4.<V      $DATA			              	            	                   
#UNFIXED	               
                              4.<A[25]   $CONDITIONER_RECIPE                    // CONDITIONER RECIPE NAME
#UNFORMATTED
	                            5.<L,  1   $CONDITIONER_STEP_LIMIT		            // CONDITIONER STEP LIMIT
	              	                   1.<L,  2
	              	      	                  1.<U1[1]   $STEP_NO
#UNFORMATTED  	 
	              	      	                  2.<L,  1  $ITEM_LIMIT		
	              	      	     	                   1.<L,  4
#UNFIXED  	 
	              	      	     	     	                    1.<A[1]   $STEP_PPARM_NAME
#UNFIXED  	 
	              	      	     	     	                    2.<A[1]   $UNIT		
#UNFIXED  	 
	              	      	     	     	                    3.<A[1]   $RANGE		
	              	      	     	     	                    4.<V      $DATA			              	            	                   
#UNFORMATTED
	              4.<L,  1   $CLEANER_STAGEx_PROCESS	                         // CLEANER STAGEx PROCESS
	                     1.<L,  3						
	                            1.<U1[1]   $STAGE_ID			                        // STAGE IDx : 1 ~ 4  (S1 ~ S4)
#UNFIXED	               
	                            2.<A[25]   $CLEANER_RECIPE	                      // CLEANER RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $CLEANER_STEP_LIMIT			              // CLEANER STEP LIMIT
	              	                   1.<L,  2
	              	      	                  1.<U1[1]   $STEP_NO
#UNFORMATTED  	 
	              	      	                  2.<L,  1  $ITEM_LIMIT		
	              	      	     	                   1.<L,  4
#UNFIXED  	 
	              	      	     	     	                    1.<A[1]   $STEP_PPARM_NAME
#UNFIXED  	 
	              	      	     	     	                    2.<A[1]   $UNIT		
#UNFIXED  	 
	              	      	     	     	                    3.<A[1]   $RANGE		
	              	      	     	     	                    4.<V      $DATA		
#UNFORMATTED
                5.<L,  1   $MEASUREMENT_PROCESS	                                        // MEASUREMENT PROCESS
	                     1.<L,  3						
	                            1.<U1[1]   $MEASUREMENT_TYPE                                 // TYPE : (0 = Previous, 1 = Post)
#UNFIXED	               
	                            2.<A[25]   $MEASUREMENT_RECIPE	                             // MEASUREMENT RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $MEASUREMENT_STEP_LIMIT			                     // MEASUREMENT STEP LIMIT
	              	                   1.<L,  2
	              	      	                  1.<U1[1]   $STEP_NO
#UNFORMATTED  	 
	              	      	                  2.<L,  1  $ITEM_LIMIT		
	              	      	     	                   1.<L,  4
#UNFIXED  	 
	              	      	     	     	                    1.<A[1]   $STEP_PPARM_NAME
#UNFIXED  	 
	              	      	     	     	                    2.<A[1]   $UNIT		
#UNFIXED  	 
	              	      	     	     	                    3.<A[1]   $RANGE		
	              	      	     	     	                    4.<V      $DATA
       
  #END

/*
PPID_INFO
	A zero-length list means request denied.
*/
  //------------------------------

  //------------------------------
  // 	Partial Formatted Process Program Send 		H -> E

  #MESSAGE    S7F93   1
  #DIRECTION  RECEIVE
  
  1.<L,  4
#UNFIXED
  	     1.<A[1]   $PPID									                                      // ROUTE RECIPE
#UNFIXED
  	     2.<A[1]   MDLN									                                        // MDLN
#UNFIXED
  	     3.<A[1]   SOFTREV								                                      // SOFTREV
         4.<L,  5                                                  
                1.<L,  4   $HEAD_USE               	                            // HEAD USE LIST
                       1.<BOOL[1]   $HEAD1_USE                                     // HEAD USE1  (True = YES)
                       2.<BOOL[1]   $HEAD2_USE                                     // HEAD USE2  (True = YES)
                       3.<BOOL[1]   $HEAD3_USE                                     // HEAD USE3  (True = YES)
                       4.<BOOL[1]   $HEAD4_USE                                     // HEAD USE4  (True = YES)	              
                2.<BOOL[1]   $POLISHER_PARALLEL_MODE	                          // POLISHER PARALLEL MODE (True = YES)
#UNFORMATTED
	              3.<L,  1   $POLISHER_STAGEx_PROCESS	                            // POLISHER STAGEx PROCESS
	                     1.<L,  5						
	                            1.<U1[1]   $STAGE_ID			                           // STAGE IDx : 1 ~ 3  (P1 ~ P3)
#UNFIXED	               
	                            2.<A[25]   $HEAD_RECIPE	                             // HEAD RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $HEAD_STEP_LIMIT			                     // STEP LIMIT
	              	                   1.<L,  2
	              	                          1.<U1[1]   $STEP_NO					              // STEP_NO
#UNFORMATTED
	              	                          2.<L,  1   $ITEM_LIMIT		                // STEP ITEM LIMIT
	              	            	                   1.<L,  2
#UNFIXED
	              	            	   	                      1.<A[1]   $STEP_PPARM_NAME     // STEP PARAMETER NAME
#UNFIXED
	              	            	   	                      2.<A[1]   $STEP_PPARM_DATA     // STEP PARAMETER DATA
#UNFIXED	               

                              4.<A[25]   $CONDITIONER_RECIPE                       // CONDITIONER RECIPE NAME
#UNFORMATTED
	                            5.<L,  1   $CONDITIONER_STEP_LIMIT		               // CONDITIONER STEP LIMIT
	              	                   1.<L,  2
	              	                          1.<U1[1]   $STEP_NO					              // STEP_NO
#UNFORMATTED
	                                          2.<L,  1   $ITEM_LIMIT		                // STEP ITEM LIMIT
	              	                                 1.<L,  2
#UNFIXED	               
	              	              	                        1.<A[1]   $STEP_PPARM_NAME	   // STEP PARAMETER NAME
#UNFIXED	               
	              	            	                          2.<A[1]   $STEP_PPARM_DATA	   // STEP PARAMETER DATA
#UNFORMATTED
	              4.<L,  1   $CLEANER_STAGEx_PROCESS	                            // CLEANER STAGEx PROCESS
	                     1.<L,  3						
	                            1.<U1[1]   $STAGE_ID			                           // STAGE IDx : 1 ~ 4  (S1 ~ S4)
#UNFIXED	               
	                            2.<A[25]   $CLEANER_RECIPE	                         // CLEANER RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $CLEANER_STEP_LIMIT			                 // CLEANER STEP LIMIT
	              	                   1.<L,  2
	              	                          1.<U1[1]   $STEP_NO					              // STEP_NO
#UNFORMATTED
	                                          2.<L,  1   $ITEM_LIMIT		                // STEP ITEM LIMIT 
	              	                                 1.<L,  2
#UNFIXED	               
	              	              	                        1.<A[1]   $STEP_PPARM_NAME	   // STEP PARAMETER NAME
#UNFIXED	               
	              	            	                          2.<A[1]   $STEP_PPARM_DATA	   // STEP PARAMETER DATA
#UNFORMATTED
                5.<L,  1   $MEASUREMENT_PROCESS	                                // MEASUREMENT PROCESS
	                     1.<L,  3						
	                            1.<U1[1]   $MEASUREMENT_TYPE                         // TYPE : (0 = Previous, 1 = Post)
#UNFIXED	               
	                            2.<A[25]   $MEASUREMENT_RECIPE	                     // MEASUREMENT RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $MEASUREMENT_STEP_LIMIT			             // MEASUREMENT STEP LIMIT
	              	                   1.<L,  2
	              	                          1.<U1[1]   $STEP_NO					              // STEP_NO
#UNFORMATTED
	                                          2.<L,  1   $ITEM_LIMIT		                // STEP ITEM LIMIT 
	              	                                 1.<L,  2
#UNFIXED	               
	              	              	                        1.<A[1]   $STEP_PPARM_NAME	   // STEP PARAMETER NAME
#UNFIXED	               
	              	            	                          2.<A[1]   $STEP_PPARM_DATA	   // STEP PARAMETER DATA
                      
  #END
  //------------------------------
  //------------------------------
  //	Partial Formatted Process Program Ack 	 	H <- E	

  #MESSAGE    S7F94
  #DIRECTION  SEND
  
  1.<L,  2
    	   1.<B[1]   $ACKC7							                                                  // ACKC7    	       	   
         2.<L,  3   $PROCESS_ERROR_LIST			
#UNFORMATTED
	              1.<L,  1   $POLISHER_STAGEx_PROCESS	                                    // POLISHER STAGEx PROCESS
                       1.<L,  6                                                         
                              1.<U1[1]   $STAGE_ACK		                                     // STAGE ACK
#UNFIXED                
                              2.<A[1]    $STAGE_ID		                                     // STAGE ID
#UNFIXED                
                              3.<A[1]    $HEAD_RECIPE		                                   // HEAD RECIPE NAME
#UNFORMATTED
                              4.<L,  1   $HEAD_STEP_ERROR_LIST                             // HEAD STEP ERROR LIST
                                     1.<L,  2
                                            1.<U1[1]   $STEP_NO			                          // STEP NO
#UNFORMATTED
                                            2.<L,  1  $ITEM_ERROR_LIST                        // ITEM ERROR LIST
                                     	             1.<L,  2
#UNFIXED                
                                     	    	              1.<A[1]    $STEP_ITEM_NAME	           // STEP ITEM NAME
                                     	    	              2.<U1[1]   $STEP_ERROR_CODE	           // STEP ERROR CODE
#UNFIXED                
                              5.<A[1]    $CONDITIONER_RECIPE		                           // CONDITIONER RECIPE NAME
#UNFORMATTED
                              6.<L,  1   $CONDITIONER_STEP_ERROR_LIST                      // CONDITIONER STEP ERROR LIST
                                     1.<L,  2
                                            1.<U1[1]   $STEP_NO			                          // STEP NO
#UNFORMATTED
                                            2.<L,  1  $ITEM_ERROR_LIST                        // ITEM ERROR LIST
                                     	             1.<L,  2
#UNFIXED                
                                     	    	              1.<A[1]    $STEP_ITEM_NAME	           // STEP ITEM NAME      
                                     	    	              2.<U1[1]   $STEP_ERROR_CODE	           // STEP ERROR CODE
#UNFORMATTED
	              2.<L,  1   $CLEANER_STAGEx_PROCESS	                                    // CLEANER STAGEx PROCESS
                       1.<L,  4                                                         
                              1.<U1[1]   $STAGE_ACK		                                     // STAGE_ACK
#UNFIXED                
                              2.<A[1]    $STAGE_ID		                                     // STAGE_ID
#UNFIXED                
                              3.<A[1]    $CLEANER_RECIPE		                               // CLEANER_RECIPE
#UNFORMATTED
                              4.<L,  1   $CLEANER_STEP_ERROR_LIST                          // CLEANTER STEP ERROR LIST
                                     1.<L,  2
                                            1.<U1[1]   $STEP_NO			                          // STEP NO
#UNFORMATTED
                                            2.<L,  1  $ITEM_ERROR_LIST                        // ITEM ERROR LIST
                                     	             1.<L,  2
#UNFIXED                
                                     	    	              1.<A[1]    $STEP_ITEM_NAME	           // STEP ITEM NAME
                                     	    	              2.<U1[1]   $STEP_ERROR_CODE	           // STEP ERROR CODE
#UNFORMATTED
                3.<L,  1   $MEASUREMENT_PROCESS	                                        // MEASUREMENT PROCESS
	                     1.<L,  3						
	                            1.<U1[1]   $MEASUREMENT_TYPE                                 // TYPE : (0 = Previous, 1 = Post)
#UNFIXED	               
	                            2.<A[25]   $MEASUREMENT_RECIPE	                             // MEASUREMENT RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $MEASUREMENT_STEP_LIMIT			                     // MEASUREMENT STEP LIMIT
                                     1.<L,  2
                                            1.<U1[1]   $STEP_NO			                          // STEP NO
#UNFORMATTED
	                                          2.<L,  1  $STEP_ITEM_LIMIT		                    // STEP ITEM LIMIT 
	              	                                 1.<L,  2
#UNFIXED	               
	              	              	                        1.<A[1]   $STEP_PPARM_NAME	           // STEP PARAMETER NAME
#UNFIXED	               
	              	            	                          2.<A[1]   $STEP_PPARM_DATA	           // STEP PARAMETER DATA    	   
        
  #END

/*
<ACKC7>  
	0 = Accepted
	1 = Permission not granted
	6 = Invalid recipe
	7 = Route Recipe not exist
		
<PM_ACK>	
	0 = Accepted
	1 = Permission not granted
	6 = Invalid recipe
	7 = PM Recipe not exist
	
<ERROR_CODE>
	1 = Parameter not exit
	2 = Range Error
	3 = Invalid Value
	4 = Step not exist
*/
  //------------------------------
	

  //------------------------------
  //	Partial Formatted Process Program Data Request   	H -> E

  #MESSAGE    S7F95  
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE       0

  1.<L,  2
#UNFIXED
  	     1.<A[1]   $PPID									                                      // ROUTE RECIPE
         2.<L,  3
#UNFORMATTED
	              1.<L,  1   $POLISHER_STAGEx_PROCESS	                            // POLISHER STAGEx PROCESS
	                     1.<L,  5						
	                            1.<U1[1]   $STAGE_ID			                           // STAGE IDx : 1 ~ 3  (P1 ~ P3)
#UNFIXED	               
	                            2.<A[25]   $HEAD_RECIPE	                             // HEAD RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $HEAD_STEP_LIMIT			                     // STEP LIMIT
	              	                   1.<L,  2
	              	                          1.<U1[1]   $STEP_NO					              // STEP_NO
#UNFORMATTED
	              	                          2.<L,  1   $ITEM_LIMIT		                // STEP ITEM LIMIT
#UNFIXED  
	              	             	                   1.<A[1]   $STEP_PPARM_NAME	           // STEP PARAMETER NAME
#UNFIXED	               
	                            4.<A[25]   $CONDITIONER_RECIPE	                     // CONDITIONER RECIPE NAME
#UNFORMATTED
	                            5.<L,  1   $CONDITIONER_STEP_LIMIT			             // CONDITIONER STEP LIMIT
	              	                   1.<L,  2
	              	                          1.<U1[1]   $STEP_NO					              // STEP_NO
#UNFORMATTED
	              	                          2.<L,  1   $ITEM_LIMIT		                // STEP ITEM LIMIT
#UNFIXED  
	              	             	                   1.<A[1]   $STEP_PPARM_NAME	           // STEP PARAMETER NAME
#UNFORMATTED
	              2.<L,  1   $CLEANER_STAGEx_PROCESS	                            // CLEANER STAGEx PROCESS
	                     1.<L,  3						
	                            1.<U1[1]   $STAGE_ID			                           // STAGE IDx : 1 ~ 4  (S1 ~ S4)
#UNFIXED	               
	                            2.<A[25]   $CLEANER_RECIPE	                         // CLEANER RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $CLEANER_STEP_LIMIT			                 // CLEANER STEP LIMIT
	              	                   1.<L,  2
	              	                          1.<U1[1]   $STEP_NO					              // STEP_NO
#UNFORMATTED
	                                          2.<L,  1   $ITEM_LIMIT		                // STEP ITEM LIMIT 
         	              	                         1.<A[1]   $STEP_PPARM_NAME	           // STEP PARAMETER NAME
#UNFORMATTED
                3.<L,  1   $MEASUREMENT_PROCESS	                                // MEASUREMENT PROCESS
	                     1.<L,  2						
#UNFIXED	               
	                            1.<A[25]   $MEASUREMENT_RECIPE	                     // MEASUREMENT RECIPE NAME
#UNFORMATTED
	                            2.<L,  1   $MEASUREMENT_STEP_LIMIT			             // MEASUREMENT STEP LIMIT
	              	                   1.<L,  2
	              	                          1.<U1[1]   $STEP_NO					              // STEP_NO
#UNFORMATTED
	                                          2.<L,  1   $ITEM_LIMIT		                // STEP ITEM LIMIT 
	              	              	                 1.<A[1]   $STEP_PPARM_NAME	           // STEP PARAMETER NAME
                      
  #END
  //------------------------------
  //------------------------------
  //	Partial Formatted Process Program Data Reply  		H <- E

  #MESSAGE    S7F96
  #DIRECTION  SEND
  
#UNFORMATTED  	 
  1.<L,  4   $PPID_INFO
#UNFIXED  	 
  	     1.<A[1]   $PPID      							// ROUTE RECIPE
#UNFIXED  	 
  	     2.<A[1]   MDLN		
#UNFIXED  	 
  	     3.<A[1]   SOFTREV	
         4.<L,  3  
	              1.<L,  1   $POLISHER_STAGEx_PROCESS	                         // POLISHER STAGEx PROCESS
	                     1.<L,  5						
	                            1.<U1[1]   $STAGE_ID			                        // STAGE IDx : 1 ~ 3  (P1 ~ P3)
#UNFIXED	               
	                            2.<A[25]   $HEAD_RECIPE	                          // HEAD RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $STEP_LIMIT			
	              	                   1.<L,  2
	              	      	                  1.<U1[1]   $STEP_NO
#UNFORMATTED  	 
	              	      	                  2.<L,  1  $ITEM_LIMIT		
	              	      	     	                   1.<L,  4
#UNFIXED  	 
	              	      	     	     	                    1.<A[1]   $STEP_PPARM_NAME
#UNFIXED  	 
	              	      	     	     	                    2.<A[1]   $UNIT		
#UNFIXED  	 
	              	      	     	     	                    3.<A[1]   $RANGE		
	              	      	     	     	                    4.<V      $DATA			              	            	                   
#UNFIXED	               
                              4.<A[25]   $CONDITIONER_RECIPE                    // CONDITIONER RECIPE NAME
#UNFORMATTED
	                            5.<L,  1   $CONDITIONER_STEP_LIMIT		            // CONDITIONER STEP LIMIT
	              	                   1.<L,  2
	              	      	                  1.<U1[1]   $STEP_NO
#UNFORMATTED  	 
	              	      	                  2.<L,  1  $ITEM_LIMIT		
	              	      	     	                   1.<L,  4
#UNFIXED  	 
	              	      	     	     	                    1.<A[1]   $STEP_PPARM_NAME
#UNFIXED  	 
	              	      	     	     	                    2.<A[1]   $UNIT		
#UNFIXED  	 
	              	      	     	     	                    3.<A[1]   $RANGE		
	              	      	     	     	                    4.<V      $DATA			              	            	                   
#UNFORMATTED
	              2.<L,  1   $CLEANER_STAGEx_PROCESS	                         // CLEANER STAGEx PROCESS
	                     1.<L,  3						
	                            1.<U1[1]   $STAGE_ID			                        // STAGE IDx : 1 ~ 4  (S1 ~ S4)
#UNFIXED	               
	                            2.<A[25]   $CLEANER_RECIPE	                      // CLEANER RECIPE NAME
#UNFORMATTED
	                            3.<L,  1   $CLEANER_STEP_LIMIT			              // CLEANER STEP LIMIT
	              	                   1.<L,  2
	              	      	                  1.<U1[1]   $STEP_NO
#UNFORMATTED  	 
	              	      	                  2.<L,  1  $ITEM_LIMIT		
	              	      	     	                   1.<L,  4
#UNFIXED  	 
	              	      	     	     	                    1.<A[1]   $STEP_PPARM_NAME
#UNFIXED  	 
	              	      	     	     	                    2.<A[1]   $UNIT		
#UNFIXED  	 
	              	      	     	     	                    3.<A[1]   $RANGE		
	              	      	     	     	                    4.<V      $DATA		
#UNFORMATTED
                3.<L,  1   $MEASUREMENT_PROCESS	                                        // MEASUREMENT PROCESS
	                     1.<L,  2	
	                            1.<A[25]   $MEASUREMENT_RECIPE	                             // MEASUREMENT RECIPE NAME
#UNFORMATTED
	                            2.<L,  1   $MEASUREMENT_STEP_LIMIT			                     // MEASUREMENT STEP LIMIT
	              	                   1.<L,  2
	              	      	                  1.<U1[1]   $STEP_NO
#UNFORMATTED  	 
	              	      	                  2.<L,  1  $ITEM_LIMIT		
	              	      	     	                   1.<L,  4
#UNFIXED  	 
	              	      	     	     	                    1.<A[1]   $STEP_PPARM_NAME
#UNFIXED  	 
	              	      	     	     	                    2.<A[1]   $UNIT		
#UNFIXED  	 
	              	      	     	     	                    3.<A[1]   $RANGE		
	              	      	     	     	                    4.<V      $DATA
       
  #END

/*
PPID_INFO
	A zero-length list means request denied.
*/
  //------------------------------


  //------------------------------
  //	Formatted Process Program Request (FPR)   	H -> E

  #MESSAGE    S7F97
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE	      0
  
#UNFIXED
  1.<A[1]   $PPID
                      
  #END
  //------------------------------
  //------------------------------
  //	Formatted Process Program Reply (FPD)  		H <- E

  #MESSAGE    S7F98
  #DIRECTION  SEND
  
#UNFORMATTED
  1.<L,  4   $PPID_INFO
#UNFIXED  
  	     1.<A[1]   $PPID      					                                  // ROUTE RECIPE
#UNFIXED  
  	     2.<A[1]   MDLN						                                      // MDLN
#UNFIXED  
  	     3.<A[1]   SOFTREV						                                    // SOFTREV
         4.<L,  3  
#UNFORMATTED
	              1.<L,  1   $POLISHER_STAGEx_PROCESS	                         // POLISHER STAGEx PROCESS
	                     1.<L,  3
	                            1.<U1[1]   $STAGE_ID			                        // STAGE IDx : 1 ~ 3  (P1 ~ P3)
#UNFIXED	               
	                            2.<A[25]   $HEAD_RECIPE	                          // HEAD RECIPE NAME
#UNFIXED	               
                              3.<A[25]   $CONDITIONER_RECIPE                    // CONDITIONER RECIPE NAME
#UNFORMATTED
	              2.<L,  1   $CLEANER_STAGEx_PROCESS	                         // CLEANER STAGEx PROCESS
	                     1.<L,  2						
	                            1.<U1[1]   $STAGE_ID			                        // STAGE IDx : 1 ~ 4  (S1 ~ S4)
#UNFIXED	               
	                            2.<A[25]   $CLEANER_RECIPE	                      // CLEANER RECIPE NAME
#UNFORMATTED
                3.<L,  1   $MEASUREMENT_PROCESS	                             // MEASUREMENT PROCESS
	                     1.<L,  2	
	                            1.<U1[1]   $MEASUREMENT_TYPE                      // TYPE : (0 = Previous, 1 = Post)
#UNFIXED	               
	                            2.<A[25]   $MEASUREMENT_RECIPE	                  // MEASUREMENT RECIPE NAME
       
  #END
  
/*
PPID_INFO
	A zero length list indicates the request was denied.
*/  
  //------------------------------


  //------------------------------
  //	Formatted Process Program Request   	H -> E

  #MESSAGE    S7F99
  #REPLY      1
  #DIRECTION  RECEIVE
  #TYPE       0

  1.<L,  2
         1.<U1[1]  $PM_ID					
#UNFIXED  
         2.<A[1]   $PPID					// ROUTE RECIPE
                      
  #END

/*
PM_ID

  111 = Head recipe of polisher stage1
  112 = Conditioner recipe of polisher stage1 
  121 = Head recipe of polisher stage2
  122 = Conditioner recipe of polisher stage2
  131 = Head recipe of polisher stage3
  132 = Conditioner recipe of polisher stage3
  
  21  = Cleaner recipe of cleaner stage1
  22  = Cleaner recipe of cleaner stage2
  23  = Cleaner recipe of cleaner stage3
  24  = Cleaner recipe of cleaner stage4
*/
  //------------------------------
  //------------------------------
  //	Formatted Process Program Reply (FPD)  		H <- E

#MESSAGE    S7F100
#DIRECTION  SEND
  
  1.<L,  3
         1.<U1[1]  $PM_ID					        
#UNFIXED          
  	     2.<A[1]   $PM_RECIPE      				    // PM PROCESS RECIPE
#UNFORMATTED	               
         3.<V      $RECIPE_BODY			
       
  #END
  //------------------------------

